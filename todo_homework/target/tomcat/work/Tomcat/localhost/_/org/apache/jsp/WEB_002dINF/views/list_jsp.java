/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-06-20 04:04:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.study.Dao.*;
import java.util.*;
import java.io.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>todo_list</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar i =0;\r\n");
      out.write("\tfunction contentOpen(id){\r\n");
      out.write("\t\tvar p = document.getElementById(id);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(i==0){\r\n");
      out.write("\t\t\tp.style.display='';\r\n");
      out.write("\t\t\ti=1;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tp.style.display='none';\r\n");
      out.write("\t\t\ti=0;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t\r\n");
      out.write("\ttd{\r\n");
      out.write("\t\tfont-family: 휴면매직체;\r\n");
      out.write("    font-size: 15px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	response.setContentType("text/html;charset=utf-8"); //한글처리
	request.setCharacterEncoding("utf-8");
	
	//이전 파일에서 보내준 데이터
	String id = request.getParameter("id");
	String year = request.getParameter("year");
	String month = request.getParameter("month");
	String day = request.getParameter("day");
	
	//DB연동 ==> DAO를 불러온다.
	DiaryDAO dao = new DiaryDAO();
	ArrayList<DiaryVo> list = dao.getDiaryData(id, Integer.parseInt(year),
													Integer.parseInt(month),
													Integer.parseInt(day));
	
	HttpSession session = request.getSession(true);
	String name=(String)session.getAttribute("name");

      out.write("\r\n");
      out.write("<center>\r\n");
      out.write("<h3>");
      out.print(id );
      out.write('님');
      out.write('의');
      out.write(' ');
      out.print(year);
      out.write('년');
      out.write(' ');
      out.print(month );
      out.write('월');
      out.print(day );
      out.write("일의 일정</h3>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t<table border=\"0\" width=\"450\">\r\n");
      out.write("\t\t\t<tr bgcolor=\"#ccccff\" >\r\n");
      out.write("\t\t\t\t<th width=\"20%\" align=\"center\">번호</th>\r\n");
      out.write("\t\t\t\t<th width=\"50%\">일정</th>\r\n");
      out.write("\t\t\t\t<th width=\"30%\">비고</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 데이터 들어가는 부분\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t/* \r\n");
      out.write("             *  list  \r\n");
      out.write("             *    폼           처리 \r\n");
      out.write("             *  insert => insert_ok(파일) ==> list \r\n");
      out.write("             *  content \r\n");
      out.write("             *  update => update_ok \r\n");
      out.write("             *  delete => delete_ok \r\n");
      out.write("             *  reply => reply_ok \r\n");
      out.write("             *   \r\n");
      out.write("             *  폼에서는 폼만잡고 코딩처리는 절대 하면 안된다 \r\n");
      out.write("             *   \r\n");
      out.write("             */ \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t -->\r\n");
      out.write("\t\t\t");

				for(DiaryVo vo:list){
			 
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=\"20%\" align=\"center\">");
      out.print(vo.getNo() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td width=\"50%\">\r\n");
      out.write("\t\t\t\t\t<a href=\"javascript:contentOpen('m+");
      out.print(vo.getNo() );
      out.write("')\">");
      out.print(vo.getSubject() );
      out.write("</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<td width=\"30%\" align=\"center\">\r\n");
      out.write("\t\t\t\t<!-- get방식으로 수정할 일정의 번호와 year,month 전송 -->\r\n");
      out.write("\t\t\t\t<a href=\"EditServlet?no=");
      out.print(vo.getNo());
      out.write("&year=");
      out.print(year);
      out.write("&month=");
      out.print(month);
      out.write("&day=");
      out.print(day);
      out.write("&id=");
      out.print(id);
      out.write("\">수정</a>\r\n");
      out.write("\t\t\t\t<!-- get방식으로 삭제할 일정의 번호와 year,month 전송 -->\r\n");
      out.write("\t\t\t\t<a href=\"DeleteServlet?no=");
      out.print(vo.getNo());
      out.write("&year=");
      out.print(year);
      out.write("&month=");
      out.print(month);
      out.write("&day=");
      out.print(day);
      out.write("&id=");
      out.print(id);
      out.write("\">삭제</a>\r\n");
      out.write("\t\t\t\t</td>\t\t\t\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<!-- tr을 안보이게 설정하고 클릭하면 보이게 함 -->\r\n");
      out.write("\t\t\t<tr style=\"display:none\" id=\"m+");
      out.print(vo.getNo());
      out.write("\">\r\n");
      out.write("\t\t\t\t<td colspan=\"3\" align=\"left\" valign=\"top\">\r\n");
      out.write("\t\t\t\t\t<hr>\r\n");
      out.write("\t\t\t\t\t\t<pre>");
      out.print(vo.getContent() );
      out.write("<br></pre>\r\n");
      out.write("\t\t\t\t\t\t일정:");
      out.print(year );
      out.write('-');
      out.print(month );
      out.write('-');
      out.print(day );
      out.write("\r\n");
      out.write("\t\t\t\t\t<hr>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
 
				}//end for
			
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<hr width=\"450\">\r\n");
      out.write("\t\t<table border=\"0\" width=\"450\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=\"/DiaryServlet?year=");
      out.print(year );
      out.write("&month=");
      out.print(month );
      out.write("&day=");
      out.print(day );
      out.write("&id=");
      out.print(id );
      out.write("\">목록</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("</center>\r\n");

	for(int i=0; i<list.size();i++)
	{
		DiaryVo vo = new DiaryVo();
	}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
